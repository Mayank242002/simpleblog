{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","tittle","map","blog","id","title","author","useFetch","url","Abortcont","AbortController","useState","data","setData","isPending","setIspending","error","setError","useEffect","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","settitle","body","setBody","setAuthor","ispending","setIsPending","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gLAceA,EAZA,WACb,OACE,sBAAKC,UAAU,SAAf,UACE,iDACA,sBAAKA,UAAU,QAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,UAAT,6BCYOC,EAlBE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,OACzB,OAGE,cAFA,CAEA,OAAKJ,UAAU,YAAf,UACE,6BAAKI,IACJD,EAAME,KAAI,SAACC,GAAD,OACT,qBAAKN,UAAU,eAAf,SACE,eAAC,IAAD,CAAMC,GAAE,iBAAYK,EAAKC,IAAzB,UACE,6BAAKD,EAAKE,QACV,2CAAcF,EAAKG,cAHYH,EAAKC,W,OC4BjCG,EAnCE,SAACC,GAChB,IAAMC,EAAY,IAAIC,gBACtB,EAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA0BJ,mBAAS,MAAnC,mBAAOK,EAAP,KAAcC,EAAd,KA4BA,OA3BAC,qBAAU,WAsBR,OArBAC,MAAMX,EAAK,CAAEY,OAAQX,EAAUW,SAC5BC,MAAK,SAACC,GACL,IAAKA,EAAIC,GACP,MAAMC,MAAM,0CAGd,OAAOF,EAAIG,UAEZJ,MAAK,SAACT,GACLC,EAAQD,GACRG,GAAa,GACbE,EAAS,SAEVS,OAAM,SAACC,GACW,eAAbA,EAAIC,KACNC,QAAQC,IAAI,kBAEZf,GAAa,GACbE,EAASU,EAAII,aAGZ,WACLtB,EAAUuB,WAEX,CAACxB,IAEG,CAAEI,OAAME,YAAWE,UCVbiB,EArBF,WACX,MAII1B,EAAS,+BAHLP,EADR,EACEY,KACAE,EAFF,EAEEA,UACAE,EAHF,EAGEA,MAKF,OACE,sBAAKnB,UAAU,UAAf,UACGmB,GAAS,8BAAMA,IACfF,GAAa,qDACbd,GACC,cAAC,EAAD,CAAUA,MAAOA,EAAOC,OAAO,kB,OCuCxBiC,EArDA,WACb,MAA0BvB,mBAAS,IAAnC,mBAAON,EAAP,KAAc8B,EAAd,KACA,EAAwBxB,mBAAS,IAAjC,mBAAOyB,EAAP,KAAaC,EAAb,KACA,EAA4B1B,mBAAS,SAArC,mBAAOL,EAAP,KAAegC,EAAf,KACA,EAAkC3B,oBAAS,GAA3C,mBAAO4B,EAAP,KAAkBC,EAAlB,KACMC,EAAUC,cAmBhB,OACE,sBAAK7C,UAAU,SAAf,UACE,gDACA,uBAAM8C,SApBW,SAACC,GACpBA,EAAEC,iBACF,IAAM1C,EAAO,CAAEE,QAAO+B,OAAM9B,UAE5BkC,GAAa,GAEbrB,MAAM,8BAA+B,CACnC2B,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BX,KAAMY,KAAKC,UAAU9C,KACpBkB,MAAK,WACNQ,QAAQC,IAAI,kBACZU,GAAa,GAEbC,EAAQS,KAAK,SAMb,UACE,gDACA,uBACEC,KAAK,OACLC,UAAQ,EACRC,MAAOhD,EACPiD,SAAU,SAACV,GAAD,OAAOT,EAASS,EAAEW,OAAOF,UAErC,+CACA,0BACED,UAAQ,EACRE,SAAU,SAACV,GAAD,OAAOP,EAAQO,EAAEW,OAAOF,QAClCA,MAAOjB,IAET,iDACA,yBAAQkB,SAAU,SAACV,GAAD,OAAON,EAAUM,EAAEW,OAAOF,QAAQA,MAAO/C,EAA3D,UACE,wBAAQ+C,MAAM,QAAd,mBACA,wBAAQA,MAAM,QAAd,uBAEAd,GAAa,8CACdA,GAAa,wBAAQiB,UAAQ,EAAhB,+CCZPC,EAnCK,WAClB,IAAQrD,EAAOsD,cAAPtD,GAER,EAIIG,EAAS,+BAAiCH,GAHtCD,EADR,EACES,KACAI,EAFF,EAEEA,MACAF,EAHF,EAGEA,UAGI2B,EAAUC,cAUhB,OACE,sBAAK7C,UAAU,uBAAf,UACGiB,GAAa,sDACbE,GAAS,8BAAMA,IACfb,GACC,oCACE,6BAAKA,EAAKE,QACV,2CAAcF,EAAKG,UACnB,4BAAIH,EAAKiC,OACT,wBAAQuB,QAjBI,WAClBxC,MAAM,+BAAiCf,EAAI,CACzC0C,OAAQ,WACPzB,MAAK,WACNoB,EAAQS,KAAK,SAaT,gCCnBKU,EAVE,WACf,OACE,sBAAK/D,UAAU,YAAf,UACE,uCACA,0DACA,cAAC,IAAD,CAAMC,GAAG,IAAT,sCC0BS+D,MA1Bf,WACE,OACE,cAAC,IAAD,UACE,sBAAKhE,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,qBAAKA,UAAU,YACf,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiE,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,UAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,eCbGE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7C,MAAK,YAAkD,IAA/C8C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.05a8b6f2.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className=\"Navbar\">\r\n      <h1>The Mayank Blog</h1>\r\n      <div className=\"links\">\r\n        <Link to=\"/\">Home</Link>\r\n        <Link to=\"/create\">New blog</Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst BlogList = ({ blogs, tittle }) => {\r\n  return (\r\n    //map function just cycles through the array\r\n\r\n    <div className='blog-list'>\r\n      <h2>{tittle}</h2>\r\n      {blogs.map((blog) => (\r\n        <div className='blog-preview' key={blog.id}>\r\n          <Link to={`/blogs/${blog.id}`}>\r\n            <h2>{blog.title}</h2>\r\n            <p>witten by {blog.author}</p>\r\n          </Link>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogList;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const Abortcont = new AbortController();\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIspending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  useEffect(() => {\r\n    fetch(url, { signal: Abortcont.signal })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw Error(\"could not fetch data for that resource\");\r\n        }\r\n\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        setData(data);\r\n        setIspending(false);\r\n        setError(null);\r\n      })\r\n      .catch((err) => {\r\n        if (err.name === \"AbortError\") {\r\n          console.log(\"fetch aborted\");\r\n        } else {\r\n          setIspending(false);\r\n          setError(err.message);\r\n        }\r\n      });\r\n    return () => {\r\n      Abortcont.abort();\r\n    };\r\n  }, [url]);\r\n\r\n  return { data, isPending, error };\r\n};\r\n\r\nexport default useFetch;\r\n","import BlogList from \"./BlogList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\nconst Home = () => {\r\n  const {\r\n    data: blogs,\r\n    isPending,\r\n    error,\r\n  } = useFetch(\"http://localhost:8000/blogs\");\r\n  //empty array make sthe funtion runs only on initial render\r\n  //props are the way to pass data from parent components to the child components\r\n\r\n  return (\r\n    <div className=\"content\">\r\n      {error && <div>{error}</div>}\r\n      {isPending && <div>Loading...........</div>}\r\n      {blogs && ( //conditioning output\r\n        <BlogList blogs={blogs} tittle=\"All blogs\" />\r\n      )}\r\n      {/*reusing the component(BlogList)*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Create = () => {\r\n  const [title, settitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [author, setAuthor] = useState('mario');\r\n  const [ispending, setIsPending] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handlesubmit = (e) => {\r\n    e.preventDefault();\r\n    const blog = { title, body, author };\r\n\r\n    setIsPending(true);\r\n\r\n    fetch('http://localhost:8000/blogs', {\r\n      method: 'POST',\r\n      headers: { 'content-type': 'application/json' },\r\n      body: JSON.stringify(blog),\r\n    }).then(() => {\r\n      console.log('new blog added');\r\n      setIsPending(false);\r\n      //history.go(-1);\r\n      history.push('/');\r\n    });\r\n  };\r\n  return (\r\n    <div className='create'>\r\n      <h2>Add a New Blog</h2>\r\n      <form onSubmit={handlesubmit}>\r\n        <label>Blog Title:</label>\r\n        <input\r\n          type='text'\r\n          required\r\n          value={title}\r\n          onChange={(e) => settitle(e.target.value)}\r\n        />\r\n        <label>Blog Body:</label>\r\n        <textarea\r\n          required\r\n          onChange={(e) => setBody(e.target.value)}\r\n          value={body}\r\n        ></textarea>\r\n        <label>Blog Author:</label>\r\n        <select onChange={(e) => setAuthor(e.target.value)} value={author}>\r\n          <option value='mario'>mario</option>\r\n          <option value='yoshi'>yoshi</option>\r\n        </select>\r\n        {!ispending && <button>Add Blog</button>}\r\n        {ispending && <button disabled>Adding Blog...............</button>}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n<div className='create'>\r\n  <title></title>\r\n</div>;\r\n","import { useParams, useHistory } from 'react-router-dom';\r\nimport useFetch from './useFetch';\r\n\r\nconst BlogDetails = () => {\r\n  const { id } = useParams();\r\n\r\n  const {\r\n    data: blog,\r\n    error,\r\n    isPending,\r\n  } = useFetch('http://localhost:8000/blogs/' + id);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleClick = () => {\r\n    fetch('http://localhost:8000/blogs/' + id, {\r\n      method: 'DELETE',\r\n    }).then(() => {\r\n      history.push('/');\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='blog-details content'>\r\n      {isPending && <div>Loading............</div>}\r\n      {error && <div>{error}</div>}\r\n      {blog && (\r\n        <article>\r\n          <h2>{blog.title}</h2>\r\n          <p>witten by {blog.author}</p>\r\n          <p>{blog.body}</p>\r\n          <button onClick={handleClick}>delete Blog</button>\r\n        </article>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BlogDetails;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className='not-found'>\r\n      <h2>Sorry</h2>\r\n      <p>That Page Cannot be Found</p>\r\n      <Link to='/'>Back to the HomePage</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import Navbar from './Navbar';\nimport Home from './Home';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar></Navbar>\n\n        <div className='content'></div>\n        <Switch>\n          <Route path='/' exact>\n            <Home></Home>\n          </Route>\n          <Route path='/create'>\n            <Create></Create>\n          </Route>\n          <Route path='/blogs/:id'>\n            <BlogDetails></BlogDetails>\n          </Route>\n          <Route path='*'>\n            <NotFound></NotFound>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}